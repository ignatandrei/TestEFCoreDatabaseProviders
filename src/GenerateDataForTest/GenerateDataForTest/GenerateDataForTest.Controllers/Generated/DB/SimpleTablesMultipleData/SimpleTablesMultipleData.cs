//3.this was autogenerated by a tool. Do not modify! Use partial
using Microsoft.EntityFrameworkCore;
using System.Runtime.CompilerServices;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;

namespace Generated;

public partial class RegisterSimpleTablesMultipleData : IRegisterContext
{
    public Type AddServices(IServiceCollection services, ConfigurationManager configuration){
        
        var cnString = configuration.GetConnectionString("SimpleTablesMultipleData");
        if (string.IsNullOrWhiteSpace(cnString))
        {
            throw new ArgumentException("please add  connection string SimpleTablesMultipleData into appsettings.json ");
        }

        services.AddDbContext<SimpleTablesMultipleData>(options =>
              {
              //options.UseSqlServer("Data Source=.;Initial Catalog=TestData;UId=sa;pwd=<YourStrong@Passw0rd>;TrustServerCertificate=true;");
              options.UseSqlServer(cnString);
              }
          );
                  services.AddTransient<ISearchDataTbl_BIGINT, SearchDataTbl_BIGINT>();
                services.AddTransient<ISearchDataTbl_BINARY, SearchDataTbl_BINARY>();
                services.AddTransient<ISearchDataTbl_BIT, SearchDataTbl_BIT>();
                services.AddTransient<ISearchDataTbl_CHAR, SearchDataTbl_CHAR>();
                services.AddTransient<ISearchDataTbl_DATE, SearchDataTbl_DATE>();
                services.AddTransient<ISearchDataTbl_DATETIME, SearchDataTbl_DATETIME>();
                services.AddTransient<ISearchDataTbl_DATETIME2, SearchDataTbl_DATETIME2>();
                services.AddTransient<ISearchDataTbl_DATETIMEOFFSET, SearchDataTbl_DATETIMEOFFSET>();
                services.AddTransient<ISearchDataTbl_DECIMAL, SearchDataTbl_DECIMAL>();
                services.AddTransient<ISearchDataTbl_FLOAT, SearchDataTbl_FLOAT>();
                services.AddTransient<ISearchDataTbl_GEOGRAPHY, SearchDataTbl_GEOGRAPHY>();
                services.AddTransient<ISearchDataTbl_GEOMETRY, SearchDataTbl_GEOMETRY>();
                services.AddTransient<ISearchDataTbl_HIERARCHYID, SearchDataTbl_HIERARCHYID>();
                services.AddTransient<ISearchDataTbl_IMAGE, SearchDataTbl_IMAGE>();
                services.AddTransient<ISearchDataTbl_INT, SearchDataTbl_INT>();
                services.AddTransient<ISearchDataTbl_JSON, SearchDataTbl_JSON>();
                services.AddTransient<ISearchDataTbl_MONEY, SearchDataTbl_MONEY>();
                services.AddTransient<ISearchDataTbl_NCHAR, SearchDataTbl_NCHAR>();
                services.AddTransient<ISearchDataTbl_NTEXT, SearchDataTbl_NTEXT>();
                services.AddTransient<ISearchDataTbl_NVARCHAR, SearchDataTbl_NVARCHAR>();
                services.AddTransient<ISearchDataTbl_REAL, SearchDataTbl_REAL>();
                services.AddTransient<ISearchDataTbl_SMALLDATETIME, SearchDataTbl_SMALLDATETIME>();
                services.AddTransient<ISearchDataTbl_SMALLINT, SearchDataTbl_SMALLINT>();
                services.AddTransient<ISearchDataTbl_TEXT, SearchDataTbl_TEXT>();
                services.AddTransient<ISearchDataTbl_TIME, SearchDataTbl_TIME>();
                services.AddTransient<ISearchDataTbl_TINYINT, SearchDataTbl_TINYINT>();
                services.AddTransient<ISearchDataTbl_UNIQUEIDENTIFIER, SearchDataTbl_UNIQUEIDENTIFIER>();
                services.AddTransient<ISearchDataTbl_VARBINARY, SearchDataTbl_VARBINARY>();
                services.AddTransient<ISearchDataTbl_VARCHAR, SearchDataTbl_VARCHAR>();
                services.AddTransient<ISearchDataTbl_XML, SearchDataTbl_XML>();
                  return typeof(SimpleTablesMultipleData);
    }
    
    [ModuleInitializer]
    public static void AddMe()
    {
        Generated.UtilsControllers.registerContexts.Add(new RegisterSimpleTablesMultipleData());
    }

    
}

